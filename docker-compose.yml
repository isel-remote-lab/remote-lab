services:
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: rl-db-${ENV_TYPE:-dev}
    ports:
      - ${DB_PORT:-}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - db-api
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - api
      - full

  api:
    image: rl-api
    container_name: rl-api-${ENV_TYPE:-dev}
    env_file:
      - ./private/shared/secrets/.env
    environment:
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - db-api
      - api-website
    ports:
      - ${API_PORT:-}:8080
    profiles:
      - api
      - full

  website:
    build:
      context: ./website
      dockerfile: Dockerfile.${ENV_TYPE:-dev}
    container_name: rl-website-${ENV_TYPE:-dev}
    environment:
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost}
      - NEXT_PUBLIC_NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost}
    env_file:
      - ./private/frontend/.env
      - ./private/shared/secrets/.env
    volumes:
      - ${WEBSITE_VOLUME:-./website:/app}
      - ${NODE_MODULES_VOLUME:-/app/node_modules}
      - ${DOMAIN_CONFIG_VOLUME:-./api/host/src/main/resources/domain-config.json:/app/domain-config.json}
    depends_on:
      - api
    networks:
      - api-website
    profiles:
      - full
  
  nginx:
    image: ${NGINX_IMAGE:-nginx}
    container_name: rl-nginx-${ENV_TYPE:-dev}
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
      - website
    networks:
      - api-website
      - cloudflare
    profiles:
      - full

  cloudflared:
    image: cloudflare/cloudflared
    container_name: rl-cloudflared-${ENV_TYPE:-dev}
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - cloudflare
    depends_on:
      - nginx
    profiles:
      - prod
      - cloudflare

networks:
  db-api:
  api-website:
  cloudflare:
volumes:
  db: 